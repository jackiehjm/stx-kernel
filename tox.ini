[tox]
envlist = linters
minversion = 2.3
skipsdist = True
stxdir = {toxinidir}/..

[testenv]
install_command = pip install -U \
  -c{env:UPPER_CONSTRAINTS_FILE:https://opendev.org/openstack/requirements/raw/branch/stable/stein/upper-constraints.txt} \
  {opts} {packages}
setenv = VIRTUAL_ENV={envdir}
         OS_STDOUT_CAPTURE=1
         OS_STDERR_CAPTURE=1
         OS_TEST_TIMEOUT=60
deps = -r{toxinidir}/test-requirements.txt
allowlist_externals = reno

[testenv:linters]
basepython = python3
allowlist_externals = bash
#bashate ignore
#E006 Line too long
commands =
  bash -c "find {toxinidir}          \
         -not \( -type d -name .?\* -prune \) \
         -type f                              \
         -not -name \*~                       \
         -not -name \*.md                     \
         -name \*.sh                          \
         -print0 | xargs -r -n 1 -0 bashate -v        \
         -i E006 -e E*"
  bash -c "find {toxinidir}        \
            \(  -path {toxinidir}/.tox \)  -a -prune     \
            -o -type f -name '*.yaml'       \
            -print0 | xargs -r -0 yamllint"

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:docs]
basepython = python3
deps = -r{toxinidir}/doc/requirements.txt
commands =
    rm -rf doc/build
    sphinx-build -a -E -W -d doc/build/doctrees -b html doc/source doc/build/html
allowlist_externals = rm

[testenv:releasenotes]
basepython = python3
deps = -r{toxinidir}/doc/requirements.txt
commands =
    rm -rf releasenotes/build
    sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html
allowlist_externals = rm
    rm

[testenv:newnote]
basepython = python3
# Re-use the releasenotes venv
envdir = {toxworkdir}/releasenotes
deps = -r{toxinidir}/doc/requirements.txt
commands = reno new {posargs}

