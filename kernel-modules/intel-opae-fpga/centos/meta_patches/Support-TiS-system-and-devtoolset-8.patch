From 0bafdeac82f1f1544b73c5d55521e694cfa2a4ac Mon Sep 17 00:00:00 2001
From: Jiping Ma <jiping.ma2@windriver.com>
Date: Tue, 22 Jun 2021 23:40:36 -0700
Subject: [PATCH 1/2] Support-TiS-system and devtoolset-8

Support-TiS-system and build with devtoolset-8, also
change package name from opae-intel-fpga-driver to
kmod-opae-fpga-driver.

Signed-off-by: Jiping Ma <jiping.ma2@windriver.com>
---
 opae-intel-fpga-driver.spec | 157 ++++++++++++++++++++++--------------
 1 file changed, 97 insertions(+), 60 deletions(-)

diff --git a/SPECS/opae-intel-fpga-driver.spec b/SPECS/opae-intel-fpga-driver.spec
index c8374d8..48f0590 100755
--- a/SPECS/opae-intel-fpga-driver.spec
+++ b/SPECS/opae-intel-fpga-driver.spec
@@ -1,19 +1,35 @@
 #
 # OPAE Drivers rpm .spec file
 #
+%if "%{?_tis_build_type}" == "rt"
+%define bt_ext -rt
+%else
+%undefine bt_ext
+%endif
+
+# Define the kmod package name here.
+%define kmod_name opae-intel-fpga-driver
+
 Summary: Create OPAE Driver source and binary rpm packages.
-Name: opae-intel-fpga-driver
+Name: opae-intel-fpga-driver%{?bt_ext}
 Version: 2.0.1
-Release: 10
+%define _release 10
+Release: %{_release}%{?_tis_dist}.%{tis_patch_ver}
 License: GPL V2
 Group: Applications/System
 Distribution: CentOS Linux
 Vendor: Intel Corporation
-Source: %{name}-%{version}.tar.gz
+Source: %{kmod_name}-%{version}.tar.gz
 Exclusiveos: linux
 ExclusiveArch: i386 i586 i686 x86_64
-Buildroot: %{_builddir}/%{name}-%{version}
-BuildRequires: kernel-headers, kernel-devel, tar, gcc, make
+Buildroot: %{_builddir}/%{kmod_name}-%{version}
+BuildRequires: kernel%{?bt_ext}-devel, tar, gcc, make
+%if 0%{?rhel} == 7
+BuildRequires:  devtoolset-8-build
+BuildRequires:  devtoolset-8-binutils
+BuildRequires:  devtoolset-8-gcc
+BuildRequires:  devtoolset-8-make
+%endif
 #BuildRequires: osv-linux4.14-devel
 #BuildRequires: osv-linux4.16-devel
 #BuildRequires: osv-linux4.19-devel
@@ -21,40 +37,58 @@ BuildRequires: kernel-headers, kernel-devel, tar, gcc, make
 BuildRequires: kernel-default-devel
 %else
 %if %{?_vendor} != "clr"
-BuildRequires: kernel-devel
+BuildRequires: kernel%{?bt_ext}-devel
 %endif
 %endif
-Requires: dkms, gcc, kernel-devel, make
+Requires: dkms, gcc, kernel%{?bt_ext}-devel, make
 %define debug_package ${nil}
 
-%package devel
+%package -n kmod-opae-fpga-driver%{?bt_ext}
+Summary: OPAE modules files
+Group: Applications/System
+%description  -n kmod-opae-fpga-driver%{?bt_ext}
+OPAE Modules files
+
+%package -n kmod-opae-fpga-driver%{?bt_ext}-devel
 Summary: OPAE modules devel files
 Group: Applications/System
-%description devel
+%description -n kmod-opae-fpga-driver%{?bt_ext}-devel
 OPAE Modules Development files
 
-%package prebuilt
+%package -n kmod-opae-fpga-driver%{?bt_ext}-prebuilt
 Summary: Prebuilt OPAE drivers for common kernels
 Group: Applications/System
-%description prebuilt
+%description  -n kmod-opae-fpga-driver%{?bt_ext}-prebuilt
 Prebuilt OPAE Drivers for common kernels
 
-%package source
+%package -n kmod-opae-fpga-driver%{?bt_ext}-source
 Summary: Source for the OPAE drivers for common kernels
 Group: Applications/System
 Requires: gcc, kernel-devel, make
-%description source
+%description -n kmod-opae-fpga-driver%{?bt_ext}-source
 Source for the OPAE Drivers for common kernels
 
 %prep
-%setup -q
+%if 0%{?rhel} == 7
+source scl_source enable devtoolset-8 || :
+source scl_source enable llvm-toolset-7.0 || :
+%endif
+%setup -q -n %{kmod_name}-%{version}
 
 %description
 OPAE Driver
 
 %build
+%if 0%{?rhel} == 7
+source scl_source enable devtoolset-8 || :
+source scl_source enable llvm-toolset-7.0 || :
+%endif
 
 %install
+%if 0%{?rhel} == 7
+source scl_source enable devtoolset-8 || :
+source scl_source enable llvm-toolset-7.0 || :
+%endif
 
 FILES_TO_COPY=`ls | grep -v '^build-' | grep -v debian | grep -v spec`
 
@@ -74,12 +108,6 @@ do
 	if [ -f $kern/Module.symvers ]
 	then
 		kernname=`basename $kern`
-		if [[ $kernname == *"2.6."* ]]; then
-			continue
-		fi
-		if [[ $kernname == *"4."* ]]; then
-			continue
-		fi
 		if ! grep -q "CONFIG_REGMAP=y" $kern/include/config/auto.conf ; then
 			continue
 		fi
@@ -95,57 +123,66 @@ done
 # Remove the depmod related file we will not be including
 rm -f $RPM_BUILD_ROOT/lib/modules/*/modules.*
 
+# Always Sign the modules(s).
+# If the module signing keys are not defined, define them here.
+%{!?privkey: %define privkey /usr/src/kernels/${kernname}/signing_key.pem}
+%{!?pubkey: %define pubkey /usr/src/kernels/${kernname}/signing_key.x509}
+for module in $(find %{buildroot} -type f -name \*.ko);
+do /usr/src/kernels/${kernname}/scripts/sign-file \
+    sha256 %{privkey} %{pubkey} $module;
+done
+
 # Now, install the source for the DKMS package
-install -d $RPM_BUILD_ROOT/usr/src/%{name}-%{version}
-cp -a drivers $RPM_BUILD_ROOT/usr/src/%{name}-%{version}
-cp -a include $RPM_BUILD_ROOT/usr/src/%{name}-%{version}
-cp -a scripts $RPM_BUILD_ROOT/usr/src/%{name}-%{version}
-cp -a lib-4-12 $RPM_BUILD_ROOT/usr/src/%{name}-%{version}
-cp -a Makefile $RPM_BUILD_ROOT/usr/src/%{name}-%{version}
-cp -a 40-intel-fpga.rules $RPM_BUILD_ROOT/usr/src/%{name}-%{version}
-cp -a LICENSE $RPM_BUILD_ROOT/usr/src/%{name}-%{version}
+install -d $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}
+cp -a drivers $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}
+cp -a include $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}
+cp -a scripts $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}
+cp -a lib-4-12 $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}
+cp -a Makefile $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}
+cp -a 40-intel-fpga.rules $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}
+cp -a LICENSE $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}
 # Now, create/install a source tarball of the driver for the -source package
 # Make a tarball of the driver source
-tar -C $RPM_BUILD_ROOT/usr/src --group=root --owner=root -czf $RPM_BUILD_ROOT/usr/src/%{name}-%{version}-%{release}.tar.gz %{name}-%{version}
+tar -C $RPM_BUILD_ROOT/usr/src --group=root --owner=root -czf $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}-%{_release}.tar.gz %{kmod_name}-%{version}
 # Set up a specfile
-sed -e 's/PKGVER/%{version}/' -e 's/PKGREL/%{release}/' build/specs/native-build.spec.in >$RPM_BUILD_ROOT/usr/src/%{name}.spec
+sed -e 's/PKGVER/%{version}/' -e 's/PKGREL/%{_release}/' build/specs/native-build.spec.in >$RPM_BUILD_ROOT/usr/src/%{kmod_name}.spec
 # Create a source package tarball that rpmbuild can consume directly
-tar -C $RPM_BUILD_ROOT/usr/src --group=root --owner=root -czf $RPM_BUILD_ROOT/usr/src/%{name}-source-%{version}-%{release}.tar.gz %{name}-%{version}-%{release}.tar.gz %{name}.spec
+tar -C $RPM_BUILD_ROOT/usr/src --group=root --owner=root -czf $RPM_BUILD_ROOT/usr/src/%{kmod_name}-source-%{version}-%{_release}.tar.gz %{kmod_name}-%{version}-%{_release}.tar.gz %{kmod_name}.spec
 # Clean up the intemediate files
-rm -rf $RPM_BUILD_ROOT/usr/src/%{name}-%{version}-%{release}.tar.gz $RPM_BUILD_ROOT/usr/src/%{name}.spec $RPM_BUILD_ROOT/usr/src/%{name}-%{version}
+rm -rf $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}-%{_release}.tar.gz $RPM_BUILD_ROOT/usr/src/%{kmod_name}.spec $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}
 
 # Prebuilt module udev file
 install -d $RPM_BUILD_ROOT/etc/udev/rules.d
 cp -a 40-intel-fpga.rules $RPM_BUILD_ROOT/etc/udev/rules.d
 
 # Now, install the source for the DKMS package
-install -d $RPM_BUILD_ROOT/usr/src/%{name}-%{version}-%{release}
-cp -a drivers $RPM_BUILD_ROOT/usr/src/%{name}-%{version}-%{release}
-cp -a include $RPM_BUILD_ROOT/usr/src/%{name}-%{version}-%{release}
-cp -a scripts $RPM_BUILD_ROOT/usr/src/%{name}-%{version}-%{release}
-cp -a lib-4-12 $RPM_BUILD_ROOT/usr/src/%{name}-%{version}-%{release}
-cp -a Makefile $RPM_BUILD_ROOT/usr/src/%{name}-%{version}-%{release}
-cp -a 40-intel-fpga.rules $RPM_BUILD_ROOT/usr/src/%{name}-%{version}-%{release}
-cp -a LICENSE $RPM_BUILD_ROOT/usr/src/%{name}-%{version}-%{release}
+install -d $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}-%{_release}
+cp -a drivers $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}-%{_release}
+cp -a include $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}-%{_release}
+cp -a scripts $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}-%{_release}
+cp -a lib-4-12 $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}-%{_release}
+cp -a Makefile $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}-%{_release}
+cp -a 40-intel-fpga.rules $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}-%{_release}
+cp -a LICENSE $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}-%{_release}
 
 # DKMS stuff
-cp -a dkms-postinst.sh $RPM_BUILD_ROOT/usr/src/%{name}-%{version}-%{release}
-cp -a dkms-postrem.sh $RPM_BUILD_ROOT/usr/src/%{name}-%{version}-%{release}
-sed -e 's/PKGVER/%{version}-%{release}/' dkms-preinst.sh >$RPM_BUILD_ROOT/usr/src/%{name}-%{version}-%{release}/dkms-preinst.sh
-chmod 0755 $RPM_BUILD_ROOT/usr/src/%{name}-%{version}-%{release}/dkms-preinst.sh
-echo "Creating $RPM_BUILD_ROOT/usr/src/%{name}-%{version}-%{release}/dkms.conf"
-sed -e 's/PKGVER/%{version}-%{release}/' dkms.conf >$RPM_BUILD_ROOT/usr/src/%{name}-%{version}-%{release}/dkms.conf
+cp -a dkms-postinst.sh $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}-%{_release}
+cp -a dkms-postrem.sh $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}-%{_release}
+sed -e 's/PKGVER/%{version}-%{_release}/' dkms-preinst.sh >$RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}-%{_release}/dkms-preinst.sh
+chmod 0755 $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}-%{_release}/dkms-preinst.sh
+echo "Creating $RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}-%{_release}/dkms.conf"
+sed -e 's/PKGVER/%{version}-%{_release}/' dkms.conf >$RPM_BUILD_ROOT/usr/src/%{kmod_name}-%{version}-%{_release}/dkms.conf
 
 %post
-if [ -z "`dkms status -m opae-intel-fpga-driver -v %{version}-%{release}`" ]; then
+if [ -z "`dkms status -m opae-intel-fpga-driver%{?bt_ext} -v %{version}-%{_release}`" ]; then
   echo "Add module source to dkms"
-  dkms add -m opae-intel-fpga-driver -v %{version}-%{release} --rpm_safe_upgrade
+  dkms add -m opae-intel-fpga-driver%{?bt_ext} -v %{version}-%{_release} --rpm_safe_upgrade
 fi
 
 # If we haven't loaded a tarball, then try building it for the current kernel
 if [ `uname -r | grep -c "BOOT"` -eq 0 ] && [ -e /lib/modules/`uname -r`/build/include ]; then
-  dkms build -m opae-intel-fpga-driver -v %{version}-%{release}
-  dkms install -m opae-intel-fpga-driver -v %{version}-%{release} --force
+  dkms build -m opae-intel-fpga-driver%{?bt_ext} -v %{version}-%{_release}
+  dkms install -m opae-intel-fpga-driver%{?bt_ext} -v %{version}-%{_release} --force
 
 elif [ `uname -r | grep -c "BOOT"` -gt 0 ]; then
   echo -e ""
@@ -162,8 +199,8 @@ exit 0
 
 %preun
 echo -e
-echo -e "Uninstall of opae-intel-fpga-driver module (version %{version}-%{release}) beginning:"
-dkms remove -m opae-intel-fpga-driver -v %{version}-%{release} --all --rpm_safe_upgrade
+echo -e "Uninstall of opae-intel-fpga-driver%{?bt_ext} module (version %{version}-%{_release}) beginning:"
+dkms remove -m opae-intel-fpga-driver%{?bt_ext} -v %{version}-%{_release} --all --rpm_safe_upgrade
 if [ "$1" -eq "0" ]
 then
 	find /lib/modules -type f \( -name spi-nor-mod.ko* \
@@ -179,7 +216,7 @@ echo -e "Force regeneration of new initramfs"
 dracut --force /boot/initramfs-$(uname -r).img $(uname -r)
 exit 0
 
-%post prebuilt
+%post -n kmod-opae-fpga-driver%{?bt_ext}-prebuilt
 depmod=/sbin/depmod
 if [ -x /usr/sbin/depmod ]
 then
@@ -201,22 +238,22 @@ done
 %clean
 rm -rf $RPM_BUILD_ROOT
 
-%files
+%files -n kmod-opae-fpga-driver%{?bt_ext}
 %defattr(-,root,root)
-/usr/src/%{name}-%{version}-%{release}
+/usr/src/%{kmod_name}-%{version}-%{_release}
 
-%files devel
+%files -n kmod-opae-fpga-driver%{?bt_ext}-devel
 #/usr/include/*
 
-%files prebuilt
+%files -n kmod-opae-fpga-driver%{?bt_ext}-prebuilt
 %defattr(-,root,root)
 /lib/modules
 /etc/udev
 
-%files source
+%files -n kmod-opae-fpga-driver%{?bt_ext}-source
 %defattr(-,root,root)
-/usr/src/%{name}-source-%{version}-%{release}.tar.gz
+/usr/src/%{kmod_name}-source-%{version}-%{_release}.tar.gz
 
 %changelog
-* %(date "+%a %b %d %Y") %{version}-%{release}
+* %(date "+%a %b %d %Y") %{version}-%{_release}
 -OPAE Intel FPGA Driver Build
-- 
2.31.1

