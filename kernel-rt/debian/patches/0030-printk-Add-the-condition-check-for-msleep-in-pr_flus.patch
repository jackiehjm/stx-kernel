From 921d86d30010add1df6935bd7876ff24355bc93b Mon Sep 17 00:00:00 2001
From: Zhixiong Chi <zhixiong.chi@windriver.com>
Date: Wed, 8 Jun 2022 05:38:56 -0700
Subject: [PATCH] printk: Add the condition check for msleep in pr_flush

After the sysrq-b command('echo b > /proc/sysrq-trigger') in rt kernel,
we can get the following warning call trace, even the system is already
going down, and this warning is most likely harmless.

[  214.722421] Call Trace:
[  214.725106]  ? vprintk_store+0x4e4/0x5f0
[  214.729415]  __schedule+0x89/0x930
[  214.733154]  schedule+0xa7/0x110
[  214.736696]  schedule_timeout+0x8b/0x190
[  214.741002]  ? __next_timer_interrupt+0x110/0x110
[  214.746167]  msleep+0x2a/0x40
[  214.749424]  pr_flush+0x149/0x190
[  214.753062]  kmsg_dump+0x102/0x110
[  214.756797]  ? handle_mm_fault+0xb08/0x1110
[  214.761393]  emergency_restart+0xf/0x20
[  214.765605]  __handle_sysrq.cold+0x43/0x113
[  214.770201]  write_sysrq_trigger+0x24/0x40
[  214.774702]  proc_reg_write+0x51/0x90
[  214.778723]  vfs_write+0xc2/0x300
[  214.782362]  ksys_write+0x65/0xe0
[  214.786000]  do_syscall_64+0x33/0x40
[  214.789924]  entry_SYSCALL_64_after_hwframe+0x44/0xa9

We can see the call chain is as below:
 __handle_sysrq()
  ->rcu_read_lock()
   ->__rcu_read_lock()
    ->rcu_preempt_read_enter()
     ->current->rcu_read_lock_nesting++;
  ...
  ->emergency_restart()
   ->kmsg_dump()
    ->pr_flush()
     ->msleep()
      ->schedule_timeout()
       ->schedule()
        ->__schedule()
         ->rcu_note_context_switch(bool preempt)
          ->WARN_ON_ONCE(!preempt && rcu_preempt_depth() > 0);

#define rcu_preempt_depth() (current->rcu_read_lock_nesting)

static void pr_msleep(bool may_sleep, int ms)
{
        if (may_sleep) {
                msleep(ms);
        } else {
                while (ms--)
                        udelay(1000);
        }
}

We add the checking condition for pr_msleep called from kmsg_dump(),
so it will use udelay instead of msleep to avoid this warning.

Signed-off-by: M. Vefa Bicakci <vefa.bicakci@windriver.com>
Signed-off-by: Zhixiong Chi <zhixiong.chi@windriver.com>
---
 kernel/printk/printk.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/kernel/printk/printk.c b/kernel/printk/printk.c
index d374a7ceb..1c4d6ddf7 100644
--- a/kernel/printk/printk.c
+++ b/kernel/printk/printk.c
@@ -3556,7 +3556,8 @@ bool pr_flush(int timeout_ms, bool reset_on_progress)
 
 	may_sleep = (preemptible() &&
 		     !in_softirq() &&
-		     system_state >= SYSTEM_RUNNING);
+		     system_state >= SYSTEM_RUNNING &&
+		     !rcu_preempt_depth());
 
 	seq = prb_next_seq(prb);
 
-- 
2.34.1

